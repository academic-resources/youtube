<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="svg-root" width="100%" height="100%" baseProfile="tiny" version="1.1" viewBox="0 0 480 360"><d:SVGTestCase xmlns:d="http://www.w3.org/2000/02/svg/testsuite/description/" author="VH" reviewer="CN" status="accepted" template-version="1.4" testname="$RCSfile: animate-elem-63-t.svg,v $" version="$Revision: 1.6 $"><d:testDescription xmlns="http://www.w3.org/1999/xhtml" href="http://www.w3.org/TR/SVG11/animate.html#Animation"><p>This tests validates multiple end conditions in the end attribute, assuming support for the &lt;set&gt; element and setting the dur attribute to &apos;indefinite&apos;.</p><p>The test validates the various possibilities for the end attribute value: multiple offset values, multiple event base values, multiple sync base values, multiple repeat values, and multiple accessKey values. Finally, the test validates that end values of different kinds can be mixed.</p><p>The test shows 6 rows where a red rectangle&apos;s x attribute is animated with &lt;set&gt; elements.</p><p>On the first three rows, the red rectangles should show on the left from 0 to 1s. From 1 to 2s, the rectangles should show on the right. Then the rectangles should show on the left from 2 to 4s, then on the right again from 4 to 5s and come back to the left position and stay there after 5s.</p><p>On the fourth row, the rectangle&apos;s end condition is event based and requires a user click. One of the end condition is defined to be 5 seconds prior to the click and one is defined to be 5 seconds after the click. If the user clicks on the rectangle before 5 seconds (in document time), the red rectangle we move to the left position 5 seconds after the click (because the &apos;click - 5s&apos; end time resolves to a time prior to the begin time). If the user clicks after 5 seconds (in document time), then the red rectangle moves to the left position immediately because the &apos;click - 5s&apos; time resolves to a time after the begin time.</p><p>On the fifth row, the rectangle&apos;s end condition is accessKey based and requires a user to press the &apos;a&apos; key. The behavior is exactly the same as for the previous row, except that the triggering event is the &apos;a&apos; key press.</p><p>The last row&apos;s rectangle has a end condition with two offset values (1s;4s) and should behave like the rectangles of the first three rows for the first 5 seconds of the document&apos;s timeline. In addition, the end condition has a click event base and thus, the rectangle should immediately move to the left position if the user everytime the user clicks clicks on the rectangle when it is on the right position. Finally, the end condition also has an accessKey condition for the &apos;b&apos; character. Thus, the rectangle should move to the left position every time the user presses the &apos;b&apos; key and the rectangle is on the right position.</p></d:testDescription><d:operatorScript xmlns="http://www.w3.org/1999/xhtml"><p>Run the test. Observe the document for six seconds. Then, click the red square in the &quot;2 event base&quot; row and then press &quot;a&quot; on the keyboard.</p><p>Next, reload the test. Before five seconds have elapsed, click the red square in the &quot;2 event base&quot; row and then press &quot;a&quot; on the keyboard. Observe the document for another six seconds.</p></d:operatorScript><d:passCriteria xmlns="http://www.w3.org/1999/xhtml"><p>The test passes if the following conditions are met:</p><ul><li>In the first load of the document, the red squares in the top three rows and the bottom row are in the relevant column according to the times written above the columns: in left column for the first second of the document, in the right column between 1s and 2s, in the left column again between 2s and 4s, in the right column again between 4s and 5s, and finally revert to the left column at 5s. During this whole time, the red squares on the &quot;2 event base&quot; and &quot;2 accessKeys&quot; rows must be in the right column.</li><li>In the first load of the document, immediately once the red square is clicked, it must move to the left column.</li><li>In the first load of the document, immediately once &quot;a&quot; is pressed on the keyboard, the red square in the &quot;2 accessKeys&quot; row must move to the left column.</li><li>In the second load of the document, five seconds after the red square is clicked, it must move to the left column.</li><li>In the second load of the document, five seconds after &quot;a&quot; is pressed on the keyboard, the red square in the &quot;2 accessKeys&quot; row must move to the left column.</li></ul></d:passCriteria></d:SVGTestCase><title id="test-title">$RCSfile: animate-elem-63-t.svg,v $</title><defs><font-face font-family="SVGFreeSansASCII" unicode-range="U+0-7F"><font-face-src><font-face-uri xlink:href="../resources/SVGFreeSans.svg#ascii"/></font-face-src></font-face></defs><g id="test-body-content" font-family="SVGFreeSansASCII,sans-serif" font-size="18"><text x="240" y="30" font-size="20" text-anchor="middle">multiple end</text><g transform="translate(100, 100)"><g font-size="14" text-anchor="end"><text transform="translate(80,25)">2 offsets</text><text y="25" transform="translate(80,25)">2 sync bases</text><text y="50" transform="translate(80,25)">2 repeat</text><text y="100" transform="translate(80,25)">2 event base</text><text y="125" transform="translate(80,25)">2 accessKeys</text><text y="150" transform="translate(80,25)">misc</text></g><g id="timeMarkersText" font-size="14" text-anchor="middle"><text transform="translate(150, 5)">0-1s</text><text y="-20" transform="translate(150, 5)">2s-4s</text><text y="-40" transform="translate(150, 5)">&gt; 5s</text><g><text transform="translate(150, 5) translate(40,0)">1-2s</text><text y="-20" transform="translate(150, 5) translate(40,0)">4-5s</text></g></g><g stroke="#000" transform="translate(150,20)"><defs><rect id="shadow" width="12" height="12" x="-6" y="-6" fill="#ccc" stroke="#000" stroke-width="1"/></defs><g id="setOne"><use x="0" xlink:href="#shadow"/><use x="40" xlink:href="#shadow"/><rect width="12" height="12" x="-6" y="-6" fill="#C06"><set id="firstSet" attributeName="x" begin="1s; 4s" dur="indefinite" end="2s; 5s" to="34"/></rect></g><g id="setTwo" transform="translate(0, 25)"><set id="syncBase" attributeName="display" begin="0s" dur="indefinite" to="inline"/><use x="0" xlink:href="#shadow"/><use x="40" xlink:href="#shadow"/><rect width="12" height="12" x="-6" y="-6" fill="#C06"><set attributeName="x" begin="1s; 4s" dur="indefinite" end="syncBase.begin+2s;syncBase.begin + 5s" to="34"/></rect></g><g id="setThree" transform="translate(0, 50)"><set id="repeatBase" attributeName="display" begin="0s" dur="1s" repeatDur="indefinite" to="inline"/><use x="0" xlink:href="#shadow"/><use x="40" xlink:href="#shadow"/><rect width="12" height="12" x="-6" y="-6" fill="#C06"><set attributeName="x" begin="1s; 4s" dur="indefinite" end="repeatBase.repeat(2);repeatBase.repeat(5)" to="34"/></rect></g><g id="setFour" transform="translate(0, 100)"><use x="0" xlink:href="#shadow"/><use x="40" xlink:href="#shadow"/><rect id="setFourTarget" width="12" height="12" x="-6" y="-6" fill="#C06"><set attributeName="x" begin="0s" dur="indefinite" end="setFourTarget.click -5s; setFourTarget.click + 5s" to="34"/></rect></g><g id="setFive" transform="translate(0, 125)"><use x="0" xlink:href="#shadow"/><use x="40" xlink:href="#shadow"/><rect id="setFiveTarget" width="12" height="12" x="-6" y="-6" fill="#C06"><set attributeName="x" begin="0s" dur="indefinite" end="accessKey(a) - 5s;accessKey(a)+5s" to="34"/></rect></g><g id="setSix" transform="translate(0, 150)"><use x="0" xlink:href="#shadow"/><use x="40" xlink:href="#shadow"/><rect id="setSixTarget" width="12" height="12" x="-6" y="-6" fill="#C06"><set attributeName="x" begin="1s;4s" dur="indefinite" end="2s;5s;setSixTarget.click;accessKey(b)" to="34"/></rect></g></g></g></g><g font-family="SVGFreeSansASCII,sans-serif" font-size="32"><text id="revision" x="10" y="340" fill="#000" stroke="none">$Revision: 1.6 $</text></g><rect id="test-frame" width="478" height="358" x="1" y="1" fill="none" stroke="#000"/></svg>