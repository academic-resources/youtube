<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="svg-root" width="100%" height="100%" baseProfile="tiny" version="1.1" viewBox="0 0 480 360"><d:SVGTestCase xmlns:d="http://www.w3.org/2000/02/svg/testsuite/description/" author="VH" reviewer="VH" status="accepted" template-version="1.4" testname="$RCSfile: animate-elem-61-t.svg,v $" version="$Revision: 1.6 $"><d:testDescription xmlns="http://www.w3.org/1999/xhtml" href="http://www.w3.org/TR/SVG11/animate.html#Animation"><p>This tests validates multiple begin conditions in the begin attribute, assuming support for the &lt;set&gt; element and setting the fill attribute on a &lt;rect&gt; element.</p><p>The test validates the various possibilities for the begin attribute value: multiple offset values, multiple event base values, multiple sync base values, multiple repeat values, and multiple accessKey values. Finally, the test validates that begin values of different kinds can be mixed.</p><p>The test shows 6 rows where a red rectangle&apos; s x attribute is animated with &lt;set&gt; elements.</p><p>On the first three rows, the red rectangles should show on the left from 0 to 1s. From 1 to 2s, the rectangles should show on the right. Then the rectangles should show on the left from 2 to 4s, then on the right again from 4 to 5s and come back to the left position and stay there after 5s.</p><p>On the fourth row, the rectangle&apos;s begin condition is event based and requires a user click. After the user clicks on the rectangle, the rectangle should move to the right position for 1s, then move back to the left position for 3 seconds, move again to the right position for 1 second before going back to the left position.</p><p>On the fifth row, the rectangle&apos;s begin condition is accessKey based and requires a user to press the &apos;a&apos; key. After the user presses that key the rectangle should move to the right position for 1s, then move back to the left position for 3 seconds, move again to the right position for 1 second before going back to the left position.</p><p>The last row&apos;s rectangle has a begin condition with two offset values (1s;4s) and should behave like the rectangles of the first three rows for the first 5 seconds of the document&apos;s timeline. In addition, the begin condition has a click event base and thus, the rectangle should move to the right position for one second every time the user clicks on it. Finally, the begin condition also has an accessKey condition for the &apos;b&apos; character. Thus, the rectangle should move to the right position every time the user presses the &apos;b&apos; key.</p></d:testDescription><d:operatorScript xmlns="http://www.w3.org/1999/xhtml"><p>Run the test. Observe the document for a least six seconds. Then, click on the left square in the &quot;2 event base&quot; row and wait for another six seconds while observing. Then, press &quot;a&quot; on the keyboard and wait for another six seconds while observing.</p></d:operatorScript><d:passCriteria xmlns="http://www.w3.org/1999/xhtml"><p>The test passes if all of the following conditions are met:</p><ul><li>The red squares in the top three rows and the bottom row are in the relevant column according to the times written above the columns: in left column for the first second of the document, in the right column between 1s and 2s, in the left column again between 2s and 4s, in the right column again between 4s and 5s, and finally revert to the left column at 5s.</li><li>Once the red square in the &quot;2 event base&quot; row is clicked, it must follow the same movements as the earlier animated squares, except that the times above the columns indicate offsets from the time of the click, rather than from the start of the document. Thus, the red square must be in the left column in the first second after being clicked, in the right column between 1s and 2s after being clicked, in the left column again between 2s and 4s after being clicked, in the right column again between 4s and 5s after being clicked, and finally must revert to the left column 5s after being clicked.</li><li>Once the &quot;a&quot; key is pressed, the red square in the &quot;2 accessKeys&quot; row must follow the same movements as the first set of animated squares, except that the times above the columns indicate offsets from the time of the keypress, rather than from the start of the document. Thus, the red square must be in the left column in the first second after the keypress, in the right column between 1s and 2s after the keypress, in the left column again between 2s and 4s after the keypress, in the right column again between 4s and 5s after the keypress, and finally must revert to the left column 5s after the keypress.</li></ul></d:passCriteria></d:SVGTestCase><title id="test-title">$RCSfile: animate-elem-61-t.svg,v $</title><defs><font-face font-family="SVGFreeSansASCII" unicode-range="U+0-7F"><font-face-src><font-face-uri xlink:href="../resources/SVGFreeSans.svg#ascii"/></font-face-src></font-face></defs><g id="test-body-content" font-family="SVGFreeSansASCII,sans-serif" font-size="18"><text x="240" y="30" font-size="20" text-anchor="middle">multiple begin</text><g transform="translate(100, 100)"><g font-size="14" text-anchor="end"><text transform="translate(80,25)">2 offsets</text><text y="25" transform="translate(80,25)">2 sync bases</text><text y="50" transform="translate(80,25)">2 repeat</text><text y="100" transform="translate(80,25)">2 event base</text><text y="125" transform="translate(80,25)">2 accessKeys</text><text y="150" transform="translate(80,25)">misc</text></g><g id="timeMarkersText" font-size="14" text-anchor="middle"><text transform="translate(150, 5)">0-1s</text><text y="-20" transform="translate(150, 5)">2s-4s</text><text y="-40" transform="translate(150, 5)">&gt; 5s</text><g><text transform="translate(150, 5) translate(40,0)">1-2s</text><text y="-20" transform="translate(150, 5) translate(40,0)">4-5s</text></g></g><g stroke="#000" transform="translate(150,20)"><defs><rect id="shadow" width="12" height="12" x="-6" y="-6" fill="#ccc" stroke="#000" stroke-width="1"/></defs><g id="setOne"><use x="0" xlink:href="#shadow"/><use x="40" xlink:href="#shadow"/><rect width="12" height="12" x="-6" y="-6" fill="#C06"><set id="firstSet" attributeName="x" begin="1s; 4s" dur="1s" to="34"/></rect></g><g id="setTwo" transform="translate(0, 25)"><set id="syncBase" attributeName="display" begin="0s" dur="indefinite" to="inline"/><use x="0" xlink:href="#shadow"/><use x="40" xlink:href="#shadow"/><rect width="12" height="12" x="-6" y="-6" fill="#C06"><set attributeName="x" begin="syncBase.begin + 1s; syncBase.begin + 4s" dur="1s" to="34"/></rect></g><g id="setThree" transform="translate(0, 50)"><set id="repeatBase" attributeName="display" begin="0s" dur="1s" repeatDur="indefinite" to="inline"/><use x="0" xlink:href="#shadow"/><use x="40" xlink:href="#shadow"/><rect width="12" height="12" x="-6" y="-6" fill="#C06"><set attributeName="x" begin="repeatBase.repeat(1);repeatBase.repeat(4)" dur="1s" to="34"/></rect></g><g id="setFour" transform="translate(0, 100)"><use x="0" xlink:href="#shadow"/><use x="40" xlink:href="#shadow"/><rect id="setFourTarget" width="12" height="12" x="-6" y="-6" fill="#C06"><set attributeName="x" begin="setFourTarget.click + 0s; setFourTarget.click+4s" dur="1s" to="34"/></rect></g><g id="setFive" transform="translate(0, 125)"><use x="0" xlink:href="#shadow"/><use x="40" xlink:href="#shadow"/><rect id="setFiveTarget" width="12" height="12" x="-6" y="-6" fill="#C06"><set attributeName="x" begin="accessKey(a) + 0s;accessKey(a)+4s" dur="1s" to="34"/></rect></g><g id="setSix" transform="translate(0, 150)"><use x="0" xlink:href="#shadow"/><use x="40" xlink:href="#shadow"/><rect id="setSixTarget" width="12" height="12" x="-6" y="-6" fill="#C06"><set attributeName="x" begin="1s;4s;setSixTarget.click;accessKey(b)" dur="1s" to="34"/></rect></g></g></g></g><g font-family="SVGFreeSansASCII,sans-serif" font-size="32"><text id="revision" x="10" y="340" fill="#000" stroke="none">$Revision: 1.6 $</text></g><rect id="test-frame" width="478" height="358" x="1" y="1" fill="none" stroke="#000"/></svg>