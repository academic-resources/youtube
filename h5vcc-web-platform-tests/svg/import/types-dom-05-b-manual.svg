<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="svg-root" width="100%" height="100%" viewBox="0 0 480 360"><d:SVGTestCase xmlns:d="http://www.w3.org/2000/02/svg/testsuite/description/" author="CM" reviewer="ED" status="accepted" template-version="1.3" testname="$RCSfile: types-dom-05-b.svg,v $" version="$Revision: 1.6 $"><d:testDescription xmlns="http://www.w3.org/1999/xhtml" href="http://www.w3.org/TR/SVG11/types.html#BasicDOMInterfaces"><p>This tests that assigning a valid length or angle string to valueAsString on an SVGLength or SVGAngle will affect that object&apos;s unitType, and that assigning an invalid string will throw a DOMException with code SYNTAX_ERR.</p></d:testDescription><d:operatorScript xmlns="http://www.w3.org/1999/xhtml"><p>Run the test. No interaction required.</p></d:operatorScript><d:passCriteria xmlns="http://www.w3.org/1999/xhtml"><p>Once the test is loaded, four rectangles are presented, indicating the result of passing a valid or invalid string to an SVGLength or SVGAngle object, as indicated. Each rectangle will be black if the sub-test did not run, red if it failed or green if it passed.</p><p>The test is passed if all four rectangles are green.</p></d:passCriteria></d:SVGTestCase><title id="test-title">$RCSfile: types-dom-05-b.svg,v $</title><defs><font-face font-family="SVGFreeSansASCII" unicode-range="U+0-7F"><font-face-src><font-face-uri xlink:href="../resources/SVGFreeSans.svg#ascii"/></font-face-src></font-face></defs><g id="test-body-content" font-family="SVGFreeSansASCII,sans-serif" font-size="18"><text x="10" y="30">Test side effects of assigning to valueAsString</text><rect id="r1" width="30" height="30" x="10" y="40"/><rect id="r2" width="30" height="30" x="10" y="80"/><rect id="r3" width="30" height="30" x="10" y="120"/><rect id="r4" width="30" height="30" x="10" y="160"/><g font-size="15"><text x="50" y="60">Valid string on SVGLength</text><text x="50" y="100">Invalid string on SVGLength</text><text x="50" y="140">Valid string on SVGAngle</text><text x="50" y="180">Invalid string on SVGAngle</text></g><circle id="c" r="1em" display="none"/><script>var b, c = document.getElementById(&apos;c&apos;); m = document.getElementById(&apos;m&apos;); b = false; try { if (c.r.baseVal.unitType != 3) { /* SVGLength.SVG_LENGTHTYPE_EMS */ throw 1; } c.r.baseVal.valueAsString = &apos;2px&apos;; if (c.r.baseVal.unitType == 5) { /* SVGLength.SVG_LENGTHTYPE_PX */ b = true; } } catch (e) { } document.getElementById(&apos;r1&apos;).setAttribute(&apos;fill&apos;, b ? &apos;green&apos; : &apos;red&apos;); b = false; try { c.r.baseVal.valueAsString = &apos;rubbish&apos;; } catch (e) { b = e.code == 12; // SYNTAX_ERR } document.getElementById(&apos;r2&apos;).setAttribute(&apos;fill&apos;, b ? &apos;green&apos; : &apos;red&apos;); b = false; try { if (m.orientAngle.baseVal.unitType != 3) { /* SVGAngle.SVG_ANGLETYPE_RAD */ throw 1; } m.orientAngle.baseVal.valueAsString = &apos;2grad&apos;; if (m.orientAngle.baseVal.unitType == 4) { /* SVGAngle.SVG_ANGLETYPE_GRAD */ b = true; } } catch (e) { } document.getElementById(&apos;r3&apos;).setAttribute(&apos;fill&apos;, b ? &apos;green&apos; : &apos;red&apos;); b = false; try { m.orientAngle.baseVal.valueAsString = &apos;rubbish&apos;; } catch (e) { b = e.code == 12; // SYNTAX_ERR } document.getElementById(&apos;r4&apos;).setAttribute(&apos;fill&apos;, b ? &apos;green&apos; : &apos;red&apos;);</script></g><g font-family="SVGFreeSansASCII,sans-serif" font-size="32"><text id="revision" x="10" y="340" fill="#000" stroke="none">$Revision: 1.6 $</text></g><rect id="test-frame" width="478" height="358" x="1" y="1" fill="none" stroke="#000"/></svg>