<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="svg-root" width="100%" height="100%" baseProfile="tiny" version="1.1" viewBox="0 0 480 360"><d:SVGTestCase xmlns:d="http://www.w3.org/2000/02/svg/testsuite/description/" author="NR" reviewer="CN" status="accepted" template-version="1.4" testname="$RCSfile: animate-elem-78-t.svg,v $" version="$Revision: 1.7 $"><d:testDescription xmlns="http://www.w3.org/1999/xhtml" href="http://www.w3.org/TR/SVG11/animate.html#Animation"><p>This test demonstrates how &lt;set&gt; elements change graphics properties on elements from the &apos;Basic Shapes&apos; chapter. For each of the graphics properties being tested, 3 &lt;set&gt; elements are set. The first &lt;set&gt; element acts directly on the &apos;Basic Shape&apos; element. The &lt;set&gt; element acts on a &lt;g&gt; containing children. The third &lt;set&gt; element acts on an &lt;a&gt; containing children. In each case the test validates that the animated value set on the &lt;g&gt; and &lt;a&gt; elements is inherited by the &apos;Basic Shape&apos; element. All the &lt;set&gt; elements have a begin attribute set to 0s with an offset of 1s after end. So, the animation will apply 1s after the document is loaded and will repeat every 1s after the animation ends.</p><p>The first &lt;set&gt; validates the fill property, with fill set to orange. When applied directly to the &apos;Basic Shape&apos; element, the &lt;rect&gt; fill value will change to orange when it is translated to the right every 1s. When applied to the &lt;g&gt; and &lt;a&gt; elements, the &lt;rect&gt; inherits the fill value and is orange.</p><p>The second &lt;set&gt; validates the fill-style property, with fill-style set to evenodd. When applied to the &apos;Basic Shape&apos; element, the &lt;polyline&gt; fill-style is changed from nonzero to evenodd. When applied to the &lt;g&gt; and &lt;a&gt; elements, the &lt;polyline&gt; inherits the evenodd fill-style.</p><p>the third &lt;set&gt; validates the stroke property. In this case fill is set to none. When stroke is applied to the &apos;Basic Shape&apos; element, the &lt;rect&gt; on the right appears with the stroke color. When applied to the &lt;g&gt; and &lt;a&gt; elements, the &lt;rect&gt; inherits the stroke property.</p><p>the fourth &lt;set&gt; validates the stroke-width property, with stroke-width set to 4. When stroke-width is applied to the &apos;Basic Shape&apos; element, the &lt;line&gt; on the right has a width of 4. When applied to the &lt;g&gt; and &lt;a&gt; elements, the &lt;line&gt; inherits the stroke-width.</p><p>the fifth &lt;set&gt; validates the stroke-linecap property, with stroke-linecap set to round. When stroke-linecap is applied to the &apos;Basic Shape&apos; element, the &lt;line&gt; stroke-linecap value switches from butt to round. When applied to the &lt;g&gt; and &lt;a&gt; elements, the &lt;line&gt; inherits the square stroke-linecap.</p><p>the sixth &lt;set&gt; validates the stroke-linejoin property, with stroke-linejoin set to bevel. When stroke-linejoin is applied to the &apos;Basic Shape&apos; element, the &lt;line&gt; stroke-linejoin value switches from miter to bevel. When applied to the &lt;g&gt; and &lt;a&gt; elements, the &lt;line&gt; inherits the bevel stroke-linejoin.</p><p>the seventh &lt;set&gt; validates the stroke-miterlimit property, with stroke-miterlimit set to 10. When stroke-miterlimit is applied to the &apos;Basic Shape&apos; element, the miter-length to stroke-width ratio exceeds the miter-limit and the &lt;polyline&gt; switches from bevel to miter.When applied to the &lt;g&gt; and &lt;a&gt; elements,the &lt;line&gt; inherits the stroke-miterlimit.</p><p>the eighth &lt;set&gt; validates the stroke-dashoffset property, with stroke-dashoffset set to 5.5. When stroke-dashoffset is applied to the &apos;Basic Shape&apos; element, the &lt;line&gt; has a different dashing pattern. When applied to the &lt;g&gt; and &lt;a&gt; elements, the &lt;line&gt; inherits the property.</p><p>the ninth &lt;set&gt; validates the display property, with display set to none. When display is applied to the &apos;Basic Shape&apos; element, the &lt;rect&gt; does not appear on the right. When applied to the &lt;g&gt; and &lt;a&gt; elements, the &lt;line&gt; inherits the display property and hence is not seen.</p><p>the tenth &lt;set&gt; validates the visibility property, with visibility set to hidden. When visibility is applied to the &apos;Basic Shape&apos; element, the &lt;rect&gt; is hidden on the right. When applied to the &lt;g&gt; and &lt;a&gt; elements, the &lt;line&gt; inherits the visibility property and hence is not seen.</p><p>the eleventh &lt;set&gt; validates the color property, with color set to blue. When color is applied to the &apos;Basic Shape&apos; element, the &lt;rect&gt; on the right switches from default color of black to blue. When applied to the &lt;g&gt; and &lt;a&gt; elements, the &lt;line&gt; inherits the color property.</p><p>The eleventh &lt;set&gt; validates the color property, with color set to orange. When applied directly to the &apos;Basic Shape&apos; element, the &lt;rect&gt; fill value will change to orange when it is translated to the right every 1s. When applied to the &lt;g&gt; and &lt;a&gt; elements, the &lt;rect&gt; inherits the color value, and via its fill=&quot;currentColor&quot; becomes orange.</p></d:testDescription><d:operatorScript xmlns="http://www.w3.org/1999/xhtml"><p>Run the test. No interaction required.</p></d:operatorScript><d:passCriteria xmlns="http://www.w3.org/1999/xhtml"><p>The document is animated such that it alternates between two states, an alternation occurring every second. In each row there are three sub-tests, which must behave identically except for any differences noted below. Each sub-test consists of a colored shape that in one state appears in the left column and in the second state appears in the right column. The test is passed if the following conditions are met:</p><ul><li>For the fill-rule, stroke-width, stroke-linecap, stroke-linejoin, stroke-miterlimit and stroke-dashoffset rows, the red shape must take the exact shape and position of the two gray silhouettes when animating between the two states.</li><li>For the fill row, the colored square must take the exact shape and position of the two gray silhouettes when animating between the two states. When in the left column, it must be red, and when in the right column, it must be orange.</li><li>For the color row, the colored square must take the exact shape and position of the two gray silhouettes when animating between the two states. When in the left column, it must be red, and when in the right column, it must be orange.</li><li>For the stroke row, the shape must be invisible when in the left column, and must be a red-stroked, empty-filled square matching the size and position of the gray silhouette when in the right column.</li><li>For the display and visibility rows, the shape must be a red square matching the size and position of the gray silhouette when in the left column, and must be invisible when in the right column.</li></ul></d:passCriteria></d:SVGTestCase><title id="test-title">$RCSfile: animate-elem-78-t.svg,v $</title><defs><font-face font-family="SVGFreeSansASCII" unicode-range="U+0-7F"><font-face-src><font-face-uri xlink:href="../resources/SVGFreeSans.svg#ascii"/></font-face-src></font-face></defs><g id="test-body-content" font-family="SVGFreeSansASCII,sans-serif" font-size="18"><text x="240" y="25" font-size="20" text-anchor="middle">graphics</text><g transform="translate(80, 75)"><g font-size="12" text-anchor="end"><text transform="translate(30,10)">fill</text><text y="20" transform="translate(30,10)">fill-rule</text><text y="40" transform="translate(30,10)">stroke</text><text y="60" transform="translate(30,10)">stroke-width</text><text y="80" transform="translate(30,10)">stroke-linecap</text><text y="100" transform="translate(30,10)">stroke-linejoin</text><text y="120" transform="translate(30,10)">stroke-miterlimit</text><text y="140" transform="translate(30,10)">stroke-dashoffset</text><text y="160" transform="translate(30,10)">display</text><text y="180" transform="translate(30,10)">visibility</text><text y="200" transform="translate(30,10)">color</text></g><g id="type" font-size="14" text-anchor="middle"><text x="20" y="3" transform="translate(90, -20)">&apos;Basic Shape&apos;</text><text x="130" y="3" transform="translate(90, -20)">&lt;g&gt;</text><text x="235" y="3" transform="translate(90, -20)">&lt;a&gt;</text></g><g fill="#C06" transform="translate(80,0)"><rect width="8" height="8" x="10" fill="#ccc"/><g id="setOne"><defs><g id="setOneRef"><rect width="8" height="8" x="10" fill="#ccc"/><rect width="8" height="8" x="10" fill="#ccc" transform="translate(30,0)"/></g></defs><use xlink:href="#setOneRef"/><use x="110" xlink:href="#setOneRef"/><use x="220" xlink:href="#setOneRef"/><rect width="8" height="8" x="10"><set id="firstSet1" attributeName="fill" begin="0s; firstSet1.end + 1s" dur="1s" to="rgb(255, 165, 0)"/><animateTransform id="firstSet1_1" attributeName="transform" begin="0s; firstSet1_1.end + 1s" dur="1s" from="30,0" to="30,0" type="translate"/></rect><g transform="translate(110, 0)"><set id="firstSet2" attributeName="fill" begin="0s; firstSet2.end + 1s" dur="1s" to="rgb(255, 165, 0)"/><rect width="8" height="8" x="10"><animateTransform id="firstSet2_1" attributeName="transform" begin="0s; firstSet2_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></rect></g><a transform="translate(220, 0)"><set id="firstSet3" attributeName="fill" begin="0s; firstSet3.end + 1s" dur="1s" to="rgb(255, 165, 0)"/><rect width="8" height="8" x="10"><animateTransform id="firstSet3_1" attributeName="transform" begin="0s; firstSet3_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></rect></a></g><g id="setTwo" stroke="#C06" transform="translate(5,15)"><defs><g id="setTwoRef"><polyline fill="#ccc" stroke="#ccc" stroke-width="1" points="20 10 0 10 15 20 10 2 5 20 20 10"/><polyline fill="#ccc" fill-rule="evenodd" stroke="#ccc" stroke-width="1" points="20 10 0 10 15 20 10 2 5 20 20 10" transform="translate(30,0)"/></g></defs><use xlink:href="#setTwoRef"/><use x="110" xlink:href="#setTwoRef"/><use x="220" xlink:href="#setTwoRef"/><polyline points="20 10 0 10 15 20 10 2 5 20 20 10"><set id="secondSet1" attributeName="fill-rule" begin="0s; secondSet1_1.end + 1s" dur="1s" to="evenodd"/><animateTransform id="secondSet1_1" attributeName="transform" begin="0s; secondSet1_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></polyline><g transform="translate(110, 0)"><set id="secondSet2" attributeName="fill-rule" begin="0s; secondSet2_1.end + 1s" dur="1s" to="evenodd"/><polyline points="20 10 0 10 15 20 10 2 5 20 20 10"><animateTransform id="secondSet2_1" attributeName="transform" begin="0s; secondSet2_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></polyline></g><a transform="translate(220, 0)"><set id="secondSet3" attributeName="fill-rule" begin="0s; secondSet3_1.end + 1s" dur="1s" to="evenodd"/><polyline points="20 10 0 10 15 20 10 2 5 20 20 10"><animateTransform id="secondSet3_1" attributeName="transform" begin="0s; secondSet3_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></polyline></a></g><g id="setThree" fill="none" transform="translate(0,45)"><defs><g id="setThreeRef"><rect width="8" height="8" x="10" fill="#ccc"/><rect width="8" height="8" x="10" fill="#ccc" transform="translate(30,0)"/></g></defs><use xlink:href="#setThreeRef"/><use x="110" xlink:href="#setThreeRef"/><use x="220" xlink:href="#setThreeRef"/><rect width="8" height="8" x="10"><set id="thirdSet1" attributeName="stroke" begin="0s; thirdSet1.end + 1s" dur="1s" to="rgb(204,0,102)"/><animateTransform id="thirdSet1_1" attributeName="transform" begin="0s; thirdSet1_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></rect><g transform="translate(110, 0)"><set id="thirdSet2" attributeName="stroke" begin="0s; thirdSet2.end + 1s" dur="1s" to="rgb(204,0,102)"/><rect width="8" height="8" x="10"><animateTransform id="thirdSet2_1" attributeName="transform" begin="0s; thirdSet2_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></rect></g><a transform="translate(220, 0)"><set id="thirdSet3" attributeName="stroke" begin="0s; thirdSet3.end + 1s" dur="1s" to="rgb(204,0,102)"/><rect width="8" height="8" x="10"><animateTransform id="thirdSet3_1" attributeName="transform" begin="0s; thirdSet3_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></rect></a></g><g id="setFour" stroke="#C06" transform="translate(0,60)"><defs><g id="setFourRef"><line x1="10" x2="20" y1="8" y2="0" stroke="#ccc"/><line x1="10" x2="20" y1="8" y2="0" stroke="#ccc" stroke-width="4" transform="translate(30,0)"/></g></defs><use xlink:href="#setFourRef"/><use x="110" xlink:href="#setFourRef"/><use x="220" xlink:href="#setFourRef"/><line x1="10" x2="20" y1="8" y2="0"><set id="fourthSet1" attributeName="stroke-width" begin="0s; fourthSet1.end + 1s" dur="1s" to="4"/><animateTransform id="fourthSet1_1" attributeName="transform" begin="0s; fourthSet1_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></line><g transform="translate(110, 0)"><set id="fourthSet2" attributeName="stroke-width" begin="0s; fourthSet2.end + 1s" dur="1s" to="4"/><line x1="10" x2="20" y1="8" y2="0"><animateTransform id="fourthSet2_1" attributeName="transform" begin="0s; fourthSet2_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></line></g><a transform="translate(220, 0)"><set id="fourthSet3" attributeName="stroke-width" begin="0s; fourthSet3.end + 1s" dur="1s" to="4"/><line x1="10" x2="20" y1="8" y2="0"><animateTransform id="fourthSet3_1" attributeName="transform" begin="0s; fourthSet3_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></line></a></g><g id="setFive" stroke="#C06" stroke-width="4" transform="translate(0,80)"><defs><g id="setFiveRef"><line x1="10" x2="20" y1="8" y2="0" stroke="#ccc"/><line x1="10" x2="20" y1="8" y2="0" stroke="#ccc" stroke-linecap="round" transform="translate(30,0)"/></g></defs><use xlink:href="#setFiveRef"/><use x="110" xlink:href="#setFiveRef"/><use x="220" xlink:href="#setFiveRef"/><line x1="10" x2="20" y1="8" y2="0"><set id="fifthSet1" attributeName="stroke-linecap" begin="0s; fifthSet1.end + 1s" dur="1s" to="round"/><animateTransform id="fifthSet1_1" attributeName="transform" begin="0s; fifthSet1_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></line><g transform="translate(110, 0)"><set id="fifthSet2" attributeName="stroke-linecap" begin="0s; fifthSet2.end + 1s" dur="1s" to="round"/><line x1="10" x2="20" y1="8" y2="0"><animateTransform id="fifthSet2_1" attributeName="transform" begin="0s; fifthSet2_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></line></g><a transform="translate(220, 0)"><set id="fifthSet3" attributeName="stroke-linecap" begin="0s; fifthSet3.end + 1s" dur="1s" to="round"/><line x1="10" x2="20" y1="8" y2="0"><animateTransform id="fifthSet3_1" attributeName="transform" begin="0s; fifthSet3_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></line></a></g><g id="setSix" fill="none" stroke="#C06" stroke-miterlimit="10" stroke-width="3" transform="translate(5,100)"><defs><g id="setSixRef"><polyline stroke="#ccc" points="5 2 20 5 5 8"/><polyline stroke="#ccc" stroke-linejoin="bevel" points="5 2 20 5 5 8" transform="translate(30,0)"/></g></defs><use xlink:href="#setSixRef"/><use x="110" xlink:href="#setSixRef"/><use x="220" xlink:href="#setSixRef"/><polyline points="5 2 20 5 5 8"><set id="sixthSet1" attributeName="stroke-linejoin" begin="0s; sixthSet1.end + 1s" dur="1s" to="bevel"/><animateTransform id="sixthSet1_1" attributeName="transform" begin="0s; sixthSet1_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></polyline><g transform="translate(110, 0)"><set id="sixthSet2" attributeName="stroke-linejoin" begin="0s; sixthSet2.end + 1s" dur="1s" to="bevel"/><polyline points="5 2 20 5 5 8"><animateTransform id="sixthSet2_1" attributeName="transform" begin="0s; sixthSet2_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></polyline></g><a transform="translate(220, 0)"><set id="sixthSet3" attributeName="stroke-linejoin" begin="0s; sixthSet3.end + 1s" dur="1s" to="bevel"/><polyline points="5 2 20 5 5 8"><animateTransform id="sixthSet3_1" attributeName="transform" begin="0s; sixthSet3_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></polyline></a></g><g id="setSeven" fill="none" stroke="#C06" stroke-miterlimit="1" stroke-width="3" transform="translate(5,120)"><defs><g id="setSevenRef"><polyline stroke="#ccc" points="5 0 20 5 5 10"/><polyline stroke="#ccc" stroke-miterlimit="10" points="5 0 20 5 5 10" transform="translate(30,0)"/></g></defs><use xlink:href="#setSevenRef"/><use x="110" xlink:href="#setSevenRef"/><use x="220" xlink:href="#setSevenRef"/><polyline points="5 0 20 5 5 10"><set id="seventhSet1" attributeName="stroke-miterlimit" begin="0s; seventhSet1.end + 1s" dur="1s" to="10"/><animateTransform id="seventhSet1_1" attributeName="transform" begin="0s; seventhSet1_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></polyline><g transform="translate(110, 0)"><set id="seventhSet2" attributeName="stroke-miterlimit" begin="0s; seventhSet2.end + 1s" dur="1s" to="10"/><polyline points="5 0 20 5 5 10"><animateTransform id="seventhSet2_1" attributeName="transform" begin="0s; seventhSet2_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></polyline></g><a transform="translate(220, 0)"><set id="seventhSet3" attributeName="stroke-miterlimit" begin="0s; seventhSet3.end + 1s" dur="1s" to="10"/><polyline points="5 0 20 5 5 10"><animateTransform id="seventhSet3_1" attributeName="transform" begin="0s; seventhSet3_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></polyline></a></g><g id="setEight" stroke="#C06" stroke-dasharray="3 4 5" stroke-width="3" transform="translate(-5,145)"><defs><g id="setEightRef"><line x1="0" x2="25" y1="0" y2="0" stroke="#ccc"/><line x1="0" x2="25" y1="0" y2="0" stroke="#ccc" stroke-dashoffset="5.5" transform="translate(40,0)"/></g></defs><use xlink:href="#setEightRef"/><use x="110" xlink:href="#setEightRef"/><use x="220" xlink:href="#setEightRef"/><line x1="0" x2="25" y1="0" y2="0"><set id="eighthSet1" attributeName="stroke-dashoffset" begin="0s; eighthSet1.end + 1s" dur="1s" to="5.5"/><animateTransform id="eighthSet1_1" attributeName="transform" begin="0s; eighthSet1_1.end + 1s" dur="1s" from="40, 0" to="40,0" type="translate"/></line><g transform="translate(110, 0)"><set id="eighthSet2" attributeName="stroke-dashoffset" begin="0s; eighthSet2.end + 1s" dur="1s" to="5.5"/><line x1="0" x2="25" y1="0" y2="0"><animateTransform id="eighthSet2_1" attributeName="transform" begin="0s; eighthSet2_1.end + 1s" dur="1s" from="40, 0" to="40,0" type="translate"/></line></g><a transform="translate(220, 0)"><set id="eighthSet3" attributeName="stroke-dashoffset" begin="0s; eighthSet3.end + 1s" dur="1s" to="5.5"/><line x1="0" x2="25" y1="0" y2="0"><animateTransform id="eighthSet3_1" attributeName="transform" begin="0s; eighthSet3_1.end + 1s" dur="1s" from="40, 0" to="40,0" type="translate"/></line></a></g><g id="setNine" transform="translate(0,160)"><defs><g id="setNineRef"><rect width="8" height="8" x="10" fill="#ccc"/><rect width="8" height="8" x="10" fill="#ccc" transform="translate(30,0)"/></g></defs><use xlink:href="#setNineRef"/><use x="110" xlink:href="#setNineRef"/><use x="220" xlink:href="#setNineRef"/><rect width="8" height="8" x="10"><set id="ninthSet1" attributeName="display" begin="0s; ninthSet1.end + 1s" dur="1s" to="none"/><animateTransform id="ninthSet1_1" attributeName="transform" begin="0s; ninthSet1_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></rect><g transform="translate(110, 0)"><set id="ninthSet2" attributeName="display" begin="0s; ninthSet2.end + 1s" dur="1s" to="none"/><rect width="8" height="8" x="10"><animateTransform id="ninthSet2_1" attributeName="transform" begin="0s; ninthSet2_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></rect></g><a transform="translate(220, 0)"><set id="ninthSet3" attributeName="display" begin="0s; ninthSet3.end + 1s" dur="1s" to="none"/><rect width="8" height="8" x="10"><animateTransform id="ninthSet3_1" attributeName="transform" begin="0s; ninthSet3_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></rect></a></g><g id="setTen" transform="translate(0,180)"><defs><g id="setTenRef"><rect width="8" height="8" x="10" fill="#ccc"/><rect width="8" height="8" x="10" fill="#ccc" transform="translate(30,0)"/></g></defs><use xlink:href="#setTenRef"/><use x="110" xlink:href="#setTenRef"/><use x="220" xlink:href="#setTenRef"/><rect width="8" height="8" x="10"><set id="tenthSet1" attributeName="visibility" begin="0s; tenthSet1.end + 1s" dur="1s" to="hidden"/><animateTransform id="tenthSet1_1" attributeName="transform" begin="0s; tenthSet1_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></rect><g transform="translate(110, 0)"><set id="tenthSet2" attributeName="visibility" begin="0s; tenthSet2.end + 1s" dur="1s" to="hidden"/><rect width="8" height="8" x="10"><animateTransform id="tenthSet2_1" attributeName="transform" begin="0s; tenthSet2_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></rect></g><a transform="translate(220, 0)"><set id="tenthSet3" attributeName="visibility" begin="0s; tenthSet3.end + 1s" dur="1s" to="hidden"/><rect width="8" height="8" x="10"><animateTransform id="tenthSet3_1" attributeName="transform" begin="0s; tenthSet3_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></rect></a></g><g id="setEleven" color="#C06" transform="translate(0,200)"><defs><g id="setElevenRef"><rect width="8" height="8" x="10" fill="#ccc"/><rect width="8" height="8" x="10" fill="#ccc" transform="translate(30,0)"/></g></defs><use xlink:href="#setElevenRef"/><use x="110" xlink:href="#setElevenRef"/><use x="220" xlink:href="#setTenRef"/><rect width="8" height="8" x="10" fill="currentColor"><set id="eleventhSet1" attributeName="color" begin="0s; eleventhSet1.end + 1s" dur="1s" to="rgb(255, 165, 0)"/><animateTransform id="eleventhSet1_1" attributeName="transform" begin="0s; eleventhSet1_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></rect><g fill="currentColor" transform="translate(110, 0)"><set id="eleventhSet2" attributeName="color" begin="0s; eleventhSet2.end + 1s" dur="1s" to="rgb(255, 165, 0)"/><rect width="8" height="8" x="10"><animateTransform id="eleventhSet2_1" attributeName="transform" begin="0s; eleventhSet2_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></rect></g><a fill="currentColor" transform="translate(220, 0)"><set attributeName="color" to="rgb(204,0,102)"/><set id="eleventhSet3" attributeName="color" begin="0s; eleventhSet3.end + 1s" dur="1s" to="rgb(255, 165, 0)"/><rect width="8" height="8" x="10"><animateTransform id="eleventhSet3_1" attributeName="transform" begin="0s; eleventhSet3_1.end + 1s" dur="1s" from="30, 0" to="30,0" type="translate"/></rect></a></g></g></g></g><g font-family="SVGFreeSansASCII,sans-serif" font-size="32"><text id="revision" x="10" y="340" fill="#000" stroke="none">$Revision: 1.7 $</text></g><rect id="test-frame" width="478" height="358" x="1" y="1" fill="none" stroke="#000"/></svg>